// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  username  String   @unique
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JuridicalPerson {
  id                     String @id @default(uuid()) @db.Uuid
  businessName           String @db.VarChar(50)
  businessDocumentType   String @default("NIT") @db.VarChar(3)
  businessDocumentNumber String @db.VarChar(20)

  // Legal Representative Information
  name              String   @db.VarChar(50)
  documentType      String   @db.VarChar(3)
  documentNumber    String   @db.VarChar(20)
  expeditionAddress String   @db.VarChar(255)
  birthDate         DateTime @db.Date
  genre             String   @db.Char(1)

  // Contact Information
  address String  @db.VarChar(50)
  phone   String  @db.Char(10)
  phone2  String? @db.Char(10)
  email   String  @db.VarChar(255)

  // Bank Information
  bank              String @db.VarChar(20)
  accountType       String @db.VarChar(10)
  bankAccountNumber String @db.VarChar(20)

  // Additional 
  createdBy String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NaturalPerson {
  id String @id @default(uuid()) @db.Uuid

  // Natural Person Information
  name              String   @db.VarChar(50)
  documentType      String   @db.VarChar(3)
  documentNumber    String   @db.VarChar(20)
  expeditionAddress String   @db.VarChar(255)
  birthDate         DateTime @db.Date
  genre             String   @db.Char(1) // M or F

  // Contact Information
  address String  @db.VarChar(50)
  phone   String  @db.Char(10)
  phone2  String? @db.Char(10)
  email   String  @db.VarChar(255)

  // Bank Information
  bank              String @db.VarChar(20)
  accountType       String @db.VarChar(10)
  bankAccountNumber String @db.VarChar(20)

  // Additional 
  createdBy String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BudgetInformation {
  id                  String   @id @default(uuid()) @db.Uuid
  certificateNumber   String   @db.VarChar(50) // Número de Certificado de Disponibilidad Presupuestal
  issuanceDate        DateTime @db.Date // Fecha de Expedición
  totalAssignedAmount Decimal  @db.Decimal(10, 2) // Total de las cantidades asignadas 

  rubros Rubro[] // Relación con los rubros

  createdBy String   @db.Uuid // ID del creador del presupuesto
  createdAt DateTime @default(now()) // Fecha de creación
  updatedAt DateTime @updatedAt // Fecha de última actualización
}

model Rubro {
  id             String  @id @default(uuid()) @db.Uuid
  name           String  @db.VarChar(100) // Nombre del Rubro
  code           String  @db.VarChar(20) // Código del Rubro
  assignedAmount Decimal @db.Decimal(10, 2) // Cantidad Asignada 

  budgetInformationId String            @db.Uuid // Relación con el presupuesto
  budgetInformation   BudgetInformation @relation(fields: [budgetInformationId], references: [id])

  createdAt DateTime @default(now()) // Fecha de creación
  updatedAt DateTime @updatedAt // Fecha de última actualización
}
